{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/seo.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js"],"names":["BlogIndex","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","title","keywords","this","props","data","allMarkdownRemark","edges","filter","_ref","node","fields","isPost","map","_ref2","key","slug","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","frontmatter","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","header","react_default","gatsby_browser_entry","SEO","description","lang","meta","author","metaDescription","Helmet_default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","array","arrayOf","Alton","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","color","googleFonts","typography","Typography","rhythm","Wrapper","scale","styled","section","withConfig","displayName","componentId","Layout","_this$props","seo","Date","getFullYear"],"mappings":"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","file":"component---src-pages-blog-js-00b8d51ca1ee75fbbb23.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\n\nclass BlogIndex extends React.Component {\n  render() {\n    return (\n      <Layout title=\"Blog\" keywords={[`blog`, `ph1p`]}>\n        Blog\n        {this.props.data.allMarkdownRemark.edges\n          .filter(({ node }) => node.fields.isPost)\n          .map(({ node }) => {\n            return (\n              <div key={node.fields.slug}>\n                <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n              </div>\n            );\n          })}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            isPost\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nexport default () => (\n  <div>\n    <Link to=\"/\">About me</Link>\n    <Link to=\"/blog/\">Blog</Link>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title, author }) {\n  const metaDescription = description;\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s${meta.title ? ' | ' + meta.title : ''}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `)\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import Typography from 'typography';\nimport Alton from 'typography-theme-alton';\n\nAlton.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`\n    },\n    a: {\n      color: '#0078da'\n    }\n  };\n};\n\ndelete Alton.googleFonts;\n\nconst typography = new Typography(Alton);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Header from './header';\nimport SEO from '../components/seo';\n\nimport { rhythm } from '../utils/typography';\n\nconst Wrapper = styled.section`\n  marginleft: auto;\n  marginright: auto;\n  maxwidth: rhythm(24);\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n`;\n\nclass Layout extends React.Component {\n  render() {\n    const { children, title, keywords, description } = this.props;\n\n    return (\n      <Wrapper>\n        <SEO title={title} keywords={keywords} description={description} />\n        <Header />\n        <main>{children}</main>\n        <footer>© {new Date().getFullYear()}</footer>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Layout;\n"],"sourceRoot":""}